{"version":3,"sources":["components/Modal/SimpleModal.js","store/actions/itemsHandler.js","store/actions/actionTypes.js","components/Modal/SimpleModalStyle.js","components/Item/Item.js","components/Item/ItemStyle.js","components/SearchBar/SearchBar.js","components/SearchBar/SearchBarStyle.js","components/List/List.js","components/List/ListStyle.js","App.js","serviceWorker.js","theme/muiTheme.js","store/reducers/itemsHandlerReducer.js","index.js"],"names":["SimpleModal","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","dialogBoxHandler","handleType","itemRemove","listTitle","indexItem","close","itemDuplicate","modalMode","modalType","classes","react_default","a","createElement","react","Button","color","className","button","variant","aria-label","onClick","state","open","Modal","modal","aria-labelledby","aria-describedby","onClose","Box","paper","IconButton","icon","Close_default","fontSize","Avatar","avatar","src","image","Grid","Typography","align","artist_name","name","Component","connect","dispatch","lsType","index","type","payload","actionCreators","withStyles","theme","_paper","display","justifyContent","alignItems","position","defineProperty","breakpoints","down","width","height","up","palette","background","shadows","margin","borderRadius","alignSelf","top","Item","modalOpen","setState","modalClose","dialogBoxOpen","dialogBoxVisable","dialogBoxClose","dialogBox","FileCopy_default","checked","itemType","listType","Modal_SimpleModal","CardMedia","cardMedia","style","onMouseEnter","onMouseLeave","concat","itemData","itemCdData","genre","artist_image","split","map","word","toUpperCase","slice","join","Chip","label","tracks_number","chip","quantity_in_stock","quantity","_cardMedia","flexDirection","padding","boxSizing","backgroundColor","backgroundBlendMode","boxShadow","marginRight","zIndex","right","SearchBar","onSubmit","filterList","inputValue","evt","target","value","_this2","container","root","item","xs","sm","md","Input","fullWidth","input","onChange","event","updateInputValue","placeholder","endAdornment","InputAdornment","Search_default","size","filterReset","search","searchKey","toLowerCase","styles","List","Container","title","components_SearchBar_SearchBar","GridList","gridList","listItems","components_Item_Item","key","_gridList","flexWrap","App","storeInitialData","Data","vinyl_records","cds","components_List_List","filteredRecordLs","length","initialRecordItems","filteredCdLs","initialCdItems","list","InitialData","Boolean","window","location","hostname","match","createMuiTheme","typography","useNextVariants","body1","fontFamily","h2","subtitle1","primary","light","main","dark","contrastText","text","textSecondary","values","lg","xl","initialState","itemsListReducer","arguments","undefined","action","objectSpread","toConsumableArray","itemsToFilter","filter","includes","alert","searchedCd","itemsToFilterCd","updateList","recordFilterdCase","indexOf","cdFilterdCase","i","updateFilter","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","itemsHandlerReducer","applyMiddleware","next","thunk","ReactDOM","render","es","MuiThemeProvider_default","muiTheme","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.797192ab.chunk.js","sourcesContent":["import React, { Component , Fragment } from 'react';\r\nimport { Avatar, Typography, Grid, IconButton, Box, Modal, Button }  from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\nimport * as actionCreators from '../../store/actions/index';\r\nimport styles from './SimpleModalStyle';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\nclass SimpleModal extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state= {\r\n            open: true,\r\n        }\r\n    }\r\n\r\n    dialogBoxHandler = (handleType) => {\r\n        if(handleType === 'remove'){\r\n            this.props.itemRemove(this.props.listTitle , this.props.indexItem) \r\n            this.props.close()\r\n        }else{ \r\n        this.props.itemDuplicate(this.props.listTitle , this.props.indexItem)\r\n        }\r\n    }\r\n  \r\n    modalMode = (modalType) => {\r\n        const { classes } = this.props;\r\n        switch(modalType){\r\n          case 'remove':\r\n            return(\r\n                    <Fragment>\r\n                        <Button color=\"primary\" \r\n                                className={classes.button} \r\n                                variant=\"contained\" aria-label=\"Add\" \r\n                                onClick={() => \r\n                                    this.dialogBoxHandler('remove')}>\r\n                                        yes\r\n                        </Button>\r\n                        <Button color=\"primary\" \r\n                                variant=\"outlined\" \r\n                                aria-label=\"Add\" \r\n                                className={classes.button} \r\n                                onClick={this.props.close}>no\r\n                        </Button>\r\n                    </Fragment> \r\n            )\r\n            case 'duplicate':\r\n                this.dialogBoxHandler('duplicate')\r\n                return(\r\n                    <Button color=\"primary\" \r\n                            className={classes.button} \r\n                            variant=\"contained\" aria-label=\"Add\" \r\n                            onClick={this.props.close}>thanxxxx\r\n                    </Button>\r\n                    )\r\n              default:\r\n                 break;\r\n        }\r\n      }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n        return(\r\n        <Fragment>\r\n            <Modal className={classes.modal}aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                onClose={this.props.close}\r\n                open={this.state.open}>\r\n                    <Box className={classes.paper}>\r\n                       <IconButton aria-label=\"Delete\" className={classes.icon}>\r\n                           <CloseIcon fontSize=\"small\" onClick={this.props.close}/>\r\n                       </IconButton>     \r\n                        <Avatar className={classes.avatar} src={this.props.image}/> \r\n                        <Grid>\r\n                        <Typography align=\"center\" variant=\"h2\">\r\n                            {this.props.modalType === 'remove'?\r\n                            'Are you sure you would like to remove' \r\n                            : \r\n                            'you have just duplicate:'}\r\n                        </Typography>\r\n                        <Typography align=\"center\" variant=\"body1\">\r\n                            {this.props.artist_name} | {this.props.name} \r\n                            {this.props.modalType === 'remove'? '?' : null}\r\n                        </Typography>\r\n                        </Grid>\r\n                        <Grid>\r\n                        {this.modalMode(this.props.modalType)}\r\n                        </Grid>  \r\n                    </Box>\r\n            </Modal>  \r\n        </Fragment>\r\n    )\r\n}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        itemRemove: (lsType, index) => dispatch(actionCreators.itemRemove(lsType, index)),\r\n        itemDuplicate: (lsType, index) => dispatch(actionCreators.itemDuplicate(lsType, index)) \r\n    }\r\n  }\r\n \r\n  export default connect('', mapDispatchToProps)(withStyles(styles)(SimpleModal));","import * as actionTypes from './actionTypes';\r\n\r\n\r\n// lowering case names to make sure all items names are looking the same\r\n// and forwarding it to reducer\r\nexport const InitialData = (item , itemType) => {\r\n    item.artist_name = item.artist_name.toLowerCase()\r\n    item.name = item.name.toLowerCase() \r\n    return {\r\n        type: actionTypes.STORE_INITIAL_DATA,\r\n        payload: {\r\n            item: item,\r\n            itemType: itemType\r\n        }\r\n    }\r\n}\r\n// reaciving data from data.Json via componentDidMount from App.js\r\n// and mapping them into single items to be passed to \r\n// storing via InitialData function above\r\nexport const storeInitialData = (list , itemType) => {\r\n    return dispatch => {   \r\n            list.map((item) => { \r\n                return(\r\n                dispatch(InitialData(item, itemType)))\r\n                })\r\n    }\r\n}\r\n// filtering action:\r\n// lowering case names to make sure all items names are looking the same\r\n// *********************************************\r\nexport const filterList = (search, listType) => {\r\n    const searchKey = search.toLowerCase();\r\n    const filterActionType = \r\n        listType === 'Vinyl Records' ? actionTypes.FILTER_RECORDS_LIST : actionTypes.FILTER_CDS_LIST\r\n    return {\r\n        type: filterActionType,\r\n        searchKey\r\n        \r\n    }\r\n}\r\n// reset filtering action:\r\nexport const filterReset = (listType) => {\r\n    return {\r\n        type: actionTypes.FILTER_RESET,\r\n        listType\r\n    }\r\n}\r\n// removal items action:\r\nexport const itemRemove = (lsType, index) => {\r\n    return {\r\n        type: actionTypes.REMOVE,\r\n        payload: {\r\n            lsType,\r\n            index\r\n        }\r\n    }\r\n}\r\n// duplicate items action:\r\nexport const itemDuplicate = (lsType, index) => {\r\n    return {\r\n        type: actionTypes.DUPLICATE,\r\n        payload: {\r\n            lsType,\r\n            index\r\n        }\r\n    }\r\n}","export const STORE_INITIAL_DATA = 'STORE_INITIAL_DATA';\r\nexport const FILTER_RECORDS_LIST = 'FILTER_RECORDS_LIST';\r\nexport const FILTER_CDS_LIST = 'FILTER_CDS_LIST';\r\nexport const FILTER_RESET = 'FILTER_RESET';\r\nexport const REMOVE = 'REMOVE';\r\nexport const DUPLICATE = 'DUPLICATE'","export default theme => ({\r\n    modal:{\r\n        display:'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    paper: {\r\n        position: 'absolute',\r\n        justifyContent: 'space-around',\r\n        [theme.breakpoints.down('xs')]: {\r\n          width: '85vw',\r\n          height: '60vh'\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n          width: 500,\r\n          height: 280\r\n        },\r\n        backgroundColor: theme.palette.background.paper,\r\n        boxShadow: theme.shadows[5],\r\n        padding: 10,\r\n        outline: 'none',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        borderRadius: 20,\r\n\r\n    },\r\n    avatar:{\r\n        height: 150,\r\n        width: 150,\r\n    },\r\n    button:{\r\n        margin: '5px',\r\n        borderRadius: '20px',\r\n        width: '100px',\r\n    },\r\n    icon:{\r\n        alignSelf: 'flex-start',\r\n        position: 'absolute',\r\n        top: 15\r\n    }\r\n\r\n});\r\n","import React, { Component } from 'react';\r\nimport { CardMedia , Avatar, Typography , Chip , Grid, Button }  from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport FileCopy from '@material-ui/icons/FileCopy';\r\nimport styles from './ItemStyle';\r\nimport SimpleModal from '../Modal/SimpleModal'\r\n\r\n\r\nclass Item extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state= {\r\n            dialogBoxVisable: false,\r\n            modalType: '',\r\n            open: false,\r\n            checked: false\r\n        }\r\n    }\r\n    modalOpen = (type) => {\r\n        this.setState({  modalType: type, open: true })\r\n    }\r\n\r\n    modalClose = () => {\r\n        this.setState({  open: false })\r\n    }\r\n    dialogBoxOpen = () => {\r\n        this.setState({ dialogBoxVisable: true })\r\n    }\r\n    dialogBoxClose = () => {\r\n        this.setState({ dialogBoxVisable: false })\r\n    }\r\n\r\n    dialogBox = () => {\r\n        const { classes } = this.props;\r\n        return(\r\n        <Grid className={ classes.dialogBox }>\r\n            <Button color=\"primary\" \r\n                    className={classes.button} \r\n                    variant=\"contained\" aria-label=\"Add\" \r\n                    onClick={() => this.modalOpen('duplicate')}>\r\n                    <FileCopy/>\r\n            </Button>\r\n            <Button color=\"default\" \r\n                    className={classes.button}\r\n                    variant=\"contained\" \r\n                    aria-label=\"Add\" \r\n                    onClick={() => this.modalOpen('remove')}>\r\n                        delete\r\n            </Button>\r\n        </Grid>\r\n      )\r\n    }\r\n   \r\n    render(){\r\n        const { classes } = this.props;\r\n        const itemType = this.props.listType === 'Cds'\r\n        return(\r\n                \r\n        <li>\r\n            {this.state.open ?\r\n            <SimpleModal \r\n                close={this.modalClose}\r\n                modalType={this.state.modalType}\r\n                listTitle={this.props.listTitle}\r\n                indexItem={this.props.indexItem}\r\n                image={this.props.image}\r\n                name={this.props.name}\r\n                artist_name={this.props.artist_name}\r\n                /> : null}\r\n             <CardMedia\r\n                className= {classes.cardMedia}\r\n                style={itemType ? {borderRadius: '50%'} : {borderRadius: 20}} \r\n                image={this.props.image}\r\n                onMouseEnter={this.dialogBoxOpen} \r\n                onClick={this.dialogBoxOpen} \r\n                onMouseLeave={this.dialogBoxClose}>\r\n                {this.state.dialogBoxVisable? this.dialogBox() : null}\r\n                <Grid className={ itemType ? `${classes.itemData} ${classes.itemCdData}` : classes.itemData} >\r\n                    <Typography color='textPrimary' variant=\"body1\">{this.props.genre}</Typography>\r\n                    <Avatar className={classes.avatar} src={this.props.artist_image}/>\r\n                </Grid>\r\n                <Grid align=\"center\">\r\n                    <Typography color='textPrimary' variant=\"h2\">\r\n                        {this.props.artist_name.split(' ')\r\n                        .map(word => word[0].toUpperCase()+ word.slice(1))\r\n                        .join(' ')}\r\n                    </Typography>\r\n                    <Typography color='textPrimary' variant=\"subtitle1\">\r\n                        {this.props.name.split(' ')\r\n                        .map(word => word[0].toUpperCase()+ word.slice(1))\r\n                        .join(' ')}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid className={ itemType ? `${classes.itemData} ${classes.itemCdData}` : classes.itemData} >\r\n                    <Chip label={this.props.tracks_number} className={classes.chip}/>\r\n                    <Chip label={`${this.props.quantity_in_stock}/${this.props.quantity}`} className={classes.chip}/>\r\n                </Grid>\r\n            </CardMedia>\r\n        </li>\r\n    )\r\n}\r\n}\r\n\r\n  export default (withStyles(styles)(Item));","export default theme => ({\r\n    button:{\r\n        margin: '5px',\r\n        borderRadius: '20px',\r\n        width: '100px',\r\n    },\r\n    cardMedia: {\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        position: 'relative',\r\n        flexDirection: 'column',\r\n        height: 'inherit',\r\n        padding: '30px 20px',\r\n        boxSizing: 'border-box',\r\n        backgroundColor: 'rgba(0, 0, 0, 0.85)',\r\n        backgroundBlendMode: 'soft-light',\r\n        display: 'flex',\r\n        boxShadow: '0 10px 30px 0 rgba(207, 217, 230, 0.5), 10px 10px 30px 0 #e8ecf1',\r\n        [theme.breakpoints.down('xs')]: {height: '55vh',width: '91vw'},\r\n        [theme.breakpoints.up('xs')]: {height: '55vh',width: '92vw'},\r\n        [theme.breakpoints.up('sm')]: {height: 400, width: '380px', marginRight: 0},\r\n        margin: '0 20px 30px 0' \r\n    },\r\n\r\n    avatar:{\r\n        height: 50,\r\n        width: 50,\r\n    },\r\n\r\n    itemCdData:{\r\n        width: '110px!important',\r\n    },\r\n\r\n    itemData:{\r\n        display:'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        width: '-webkit-fill-available',\r\n    },\r\n    \r\n    dialogBox:{\r\n        position: 'absolute',\r\n        background: '#7d7d7df0',\r\n        width: 'inherit',\r\n        height: 'inherit',\r\n        borderRadius: 'inherit',\r\n        zIndex: 1,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        top: 0,\r\n        right: 0\r\n    },\r\n    \r\n})","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {InputAdornment , Input , Grid }  from '@material-ui/core';\r\nimport * as actionCreators from '../../store/actions/index';\r\nimport { Button }  from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport styles from './SearchBarStyle';\r\n\r\nclass SearchBar extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state= {\r\n            inputValue: ''\r\n        }\r\n    }\r\n\r\n    updateInputValue(evt) {\r\n        this.setState({\r\n          inputValue: evt.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit = () => {\r\n        this.props.filterList(this.state.inputValue, this.props.listType)\r\n        this.setState({\r\n            inputValue: ''\r\n          });\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n        return(\r\n            <Grid container className={classes.root}>\r\n                <Grid item xs={6} sm={9} md={10}>\r\n                    <Input fullWidth className={classes.input} \r\n                        value={this.state.inputValue}\r\n                        onChange={event => this.updateInputValue(event)}\r\n                        placeholder = {`Search for ${this.props.listType}`}\r\n                        endAdornment={\r\n                            <InputAdornment position=\"end\">\r\n                            <SearchIcon/>\r\n                            </InputAdornment>}/>\r\n                </Grid>\r\n                <Grid item> \r\n                    <Button \r\n                        size=\"small\" variant=\"contained\"\r\n                        className={classes.button} \r\n                        color=\"primary\" \r\n                        onClick = {event => this.onSubmit(event)}>search\r\n                    </Button>\r\n                    <Button \r\n                        size=\"small\" \r\n                        variant=\"outlined\" \r\n                        aria-label=\"Add\" \r\n                        className={classes.button} \r\n                        color=\"primary\" \r\n                        onClick = {() => this.props.filterReset(this.props.listType)}>reset\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n      filterList: (search, listType) => dispatch(actionCreators.filterList(search, listType)),\r\n      filterReset: (listType) => dispatch(actionCreators.filterReset(listType))\r\n  }\r\n}\r\n\r\nexport default connect('',mapDispatchToProps)(withStyles(styles)(SearchBar))\r\n","export default styles => ({\r\n        root:{\r\n            margin: '20px 0',\r\n            justifyContent: 'space-between',\r\n            alignItems:'center',\r\n        },\r\n        button:{\r\n            borderRadius: 20,\r\n            margin: 2\r\n        },\r\n        input:{\r\n            fontSize: '14px!important',\r\n            color: 'black!important'\r\n        }\r\n      });","import React, { Component } from 'react';\r\nimport Item from '../Item/Item';\r\nimport SearchBar from '../SearchBar/SearchBar';\r\n\r\nimport { Typography }  from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { GridList , Container}  from '@material-ui/core';\r\nimport styles from './ListStyle'; \r\nimport './List.scss'\r\n\r\n\r\nclass List extends Component{   \r\n  render(){ \r\n    const { classes } = this.props;\r\n    return (\r\n      <Container className={classes.root}>\r\n        <Typography variant=\"h2\">{this.props.title}</Typography>\r\n        <SearchBar listType = {this.props.title === 'Vinyl Records' ? 'Vinyl Records' : 'Cd'}/>\r\n        <GridList className={classes.gridList}>\r\n            {this.props.listItems.map((item, index) => \r\n              <Item \r\n                  listType={this.props.title}\r\n                  listTitle = {this.props.title}\r\n                  key = {index}\r\n                  indexItem = {index}\r\n                  genre={item.genre}\r\n                  artist_image={item.artist_image}\r\n                  artist_name={item.artist_name}\r\n                  name={item.name}\r\n                  image={item.image}\r\n                  tracks_number={item.tracks_number}\r\n                  quantity_in_stock={item.quantity_in_stock}\r\n                  quantity={item.quantity}/>\r\n            )}\r\n        </GridList>\r\n        </Container>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default withStyles(styles)(List);\r\n\r\n","export default theme => ({\r\n        root:{\r\n          margin: '30px auto'\r\n        },\r\n        gridList: {\r\n          justifyContent: 'space-between',\r\n          [theme.breakpoints.down('xs')]: {\r\n            flexWrap: 'nowrap',\r\n          },\r\n          [theme.breakpoints.up('sm')]: {\r\n            flexWrap: 'wrap',\r\n          },\r\n        },\r\n      });","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actionCreators from './store/actions/index';\nimport List from './components/List/List'\nimport Data from './utilites/data';\n\n\nclass App extends Component{\n  componentDidMount(){\n    this.props.storeInitialData(Data.vinyl_records, 'records')\n    this.props.storeInitialData(Data.cds, 'cds')   \n  }\n  \nrender(){\n  return (\n    <div className=\"App\">\n\n      <List listItems= { \n        this.props.filteredRecordLs.length > 0 ? \n        this.props.filteredRecordLs : \n        this.props.initialRecordItems} \n        title= 'Vinyl Records'/>              \n      <List listItems={\n        this.props.filteredCdLs.length > 0 ? \n        this.props.filteredCdLs : \n        this.props.initialCdItems} \n        title= 'Cds'/>\n    </div>\n  );\n}\n}\n\nconst mapStateToProps = state => {\n  return {\n    initialRecordItems: state.initialRecordItems,\n    initialCdItems: state.initialCdItems,\n    filteredRecordLs: state.filteredRecordLs,\n    filteredCdLs: state.filteredCdLs\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n      storeInitialData: (list, type) => dispatch(actionCreators.storeInitialData(list, type)),\n  }\n}\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    useNextVariants: true,\r\n    body1: {\r\n      fontFamily: `'Varela Round', sans-serif`\r\n    },\r\n    h2: {\r\n      fontFamily: `'Suez One', serif`,\r\n      fontSize: '1.5rem',\r\n    },\r\n    subtitle1: {\r\n      fontFamily: `'Varela Round', sans-serif`\r\n    }\r\n  },\r\n  palette: {\r\n    primary: {\r\n        light: '#63ccff',\r\n        main: '#1d5fd8',\r\n        dark: '#006db3',\r\n        contrastText: '#fff',\r\n    },\r\n    text:{\r\n        primary : '#fff',\r\n        textSecondary : 'rgba(0, 0, 0, 0.85)'\r\n    }\r\n    },\r\n    breakpoints: {\r\n      values: {\r\n        xs: 375,\r\n        sm: 600,\r\n        md: 960,\r\n        lg: 1280,\r\n        xl: 1920,\r\n      }\r\n    }\r\n});\r\n\r\nexport default theme;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = { \r\n    initialCdItems:[],\r\n    initialRecordItems:[],\r\n    filteredRecordLs:[],\r\n    filteredCdLs:[]\r\n};\r\n\r\nconst itemsListReducer = (state= initialState, action) => {\r\n    switch(action.type){\r\n        // store all data from Json file via componentDidMount from App.js\r\n        // separte to two lists initialCdItems and initialRecordItems\r\n        case actionTypes.STORE_INITIAL_DATA:\r\n            if(action.payload.itemType === 'records'){ \r\n                return ({\r\n                    ...state,\r\n                    initialRecordItems: [action.payload.item, ...state.initialRecordItems]\r\n                })\r\n            }else{ \r\n                return ({\r\n                    ...state,\r\n                    initialCdItems: [action.payload.item, ...state.initialCdItems]\r\n                })\r\n            }\r\n        // filtering action- filtering to names in the initial list that been passed from \r\n        // the action file \r\n        case actionTypes.FILTER_RECORDS_LIST:\r\n            const itemsToFilter = state.initialRecordItems.filter(item => {\r\n                return (item.artist_name.includes(action.searchKey) || item.name.includes(action.searchKey))\r\n            })\r\n            itemsToFilter.length <=0 ? alert('no items as been found'): alert(`${itemsToFilter.length} items found`)\r\n\r\n            return {\r\n                ...state,\r\n                filteredRecordLs: itemsToFilter\r\n            }\r\n            case actionTypes.FILTER_CDS_LIST:\r\n                    const searchedCd = action.search.toLowerCase();\r\n                    const itemsToFilterCd = state.initialCdItems.filter(item => {\r\n                        return (item.artist_name.includes(searchedCd) || item.name.includes(searchedCd))\r\n                    })\r\n                    itemsToFilterCd.length <=0 ? alert('no items as been found'): alert(`${itemsToFilterCd.length} items found`)\r\n        \r\n                    return {\r\n                        ...state,\r\n                        filteredCdLs: itemsToFilterCd\r\n                    }\r\n        // reset filtering   \r\n        case actionTypes.FILTER_RESET:\r\n            return {\r\n                ...state,\r\n                filteredRecordLs: action.listType === 'Vinyl Records' ? [] : state.filteredRecordLs,\r\n                filteredCdLs: action.listType === 'Cd' ? [] : state.filteredCdLs\r\n            }\r\n\r\n        // remove items \r\n        case actionTypes.REMOVE:\r\n                let updateList = []\r\n                const recordFilterdCase = state.initialRecordItems.indexOf(state.filteredRecordLs[action.payload.index])\r\n                const cdFilterdCase = state.initialCdItems.indexOf(state.filteredCdLs[action.payload.index])\r\n                if(action.payload.lsType === 'Vinyl Records'){\r\n                    if(recordFilterdCase >= 0){\r\n                        updateList = state.initialRecordItems.filter((item, i) => i !== recordFilterdCase)\r\n                    }else{\r\n                        updateList = state.initialRecordItems.filter((item, i) => i !== action.payload.index)  \r\n                    }\r\n                }else if(action.payload.lsType === 'Cds'){\r\n                    if(cdFilterdCase >= 0){\r\n                        updateList = state.initialCdItems.filter((item, i) => i !== cdFilterdCase)\r\n                    }else{\r\n                        updateList = state.initialCdItems.filter((item, i) => i !== action.payload.index)  \r\n                    }\r\n                }\r\n            return {\r\n                ...state,\r\n                initialRecordItems: action.payload.lsType === 'Vinyl Records' ?\r\n                    updateList : state.initialRecordItems,\r\n                initialCdItems: action.payload.lsType === 'Cds' ?\r\n                    updateList : state.initialCdItems,\r\n                filteredRecordLs:action.payload.lsType === 'Vinyl Records' ?\r\n                    state.filteredRecordLs.filter((item, i) => i !== action.payload.index) : state.filteredRecordLs,\r\n                filteredCdLs:action.payload.lsType === 'Cds' ?\r\n                    state.filteredCdLs.filter((item, i) => i !== action.payload.index) : state.filteredCdLs\r\n            } \r\n\r\n        // duplicate items\r\n        case actionTypes.DUPLICATE:\r\n                let updateFilter = '' \r\n                if(state.filteredRecordLs.length > 0 && action.payload.lsType === 'Vinyl Records'){\r\n                     updateFilter= 'RecordsLs'\r\n                }else if(state.filteredCdLs.length > 0 && action.payload.lsType === 'Cds'){\r\n                     updateFilter= 'CdLs'\r\n                }\r\n         \r\n                return {\r\n                    ...state,\r\n                    initialRecordItems: action.payload.lsType === 'Vinyl Records' ?\r\n                        [...state.initialRecordItems, state.initialRecordItems[action.payload.index]] : state.initialRecordItems,\r\n                    initialCdItems: action.payload.lsType === 'Cds' ?\r\n                        [...state.initialCdItems, state.initialCdItems[action.payload.index]] : state.initialCdItems,\r\n                    filteredRecordLs: updateFilter === 'RecordsLs' ?\r\n                        [...state.filteredRecordLs, state.filteredRecordLs[action.payload.index]] : state.filteredRecordLs,\r\n                    filteredCdLs: updateFilter === 'CdLs' ?\r\n                        [...state.filteredCdLs, state.filteredCdLs[action.payload.index]] : state.filteredCdLs\r\n\r\n                } \r\n        default: \r\n            return state;\r\n    };\r\n    \r\n};\r\n\r\nexport default itemsListReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// THEME\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport muiTheme from './theme/muiTheme';\n\nimport itemsHandlerReducer from './store/reducers/itemsHandlerReducer';\n\n\nconst logger = store => {\n    return next => {\n        return action => {\n            const result = next(action);\n            return result;\n        }\n    }\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(itemsHandlerReducer, composeEnhancers(applyMiddleware(logger , thunk)));\n\nReactDOM.render(<Provider store={store}><MuiThemeProvider theme={muiTheme}><App /></MuiThemeProvider></Provider>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}