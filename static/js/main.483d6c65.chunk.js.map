{"version":3,"sources":["components/Item/Item.js","store/actions/itemsHandler.js","store/actions/actionTypes.js","components/SearchBar/SearchBar.js","components/List/List.js","App.js","serviceWorker.js","theme/muiTheme.js","store/reducers/itemsHandlerReducer.js","index.js"],"names":["Item","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","dialogBoxOpen","setState","dialogBoxVisable","dialogBoxClose","dialogBoxHandler","handleType","listType","index","itemRemove","itemDuplicate","dialogBox","classes","react_default","a","createElement","className","display","state","Button","color","button","variant","aria-label","onClick","listTitle","i","FileCopy_default","root","CardMedia","cardMedia","image","onMouseEnter","onMouseLeave","Grid","container","justify","alignItems","Typography","typography","genre","Avatar","avatar","src","artist_image","align","typographyf","artist_name","split","map","word","toUpperCase","slice","join","name","Box","justifyContent","Chip","label","tracks_number","chip","concat","quantity_in_stock","quantity","Component","connect","dispatch","lsType","type","payload","actionCreators","withStyles","theme","_cardMedia","flexDirection","overflow","marginTop","boxShadow","borderRadius","boxSizing","position","margin","width","height","padding","backgroundColor","backgroundBlendMode","defineProperty","breakpoints","down","up","SearchBar","onSubmit","filterList","inputValue","evt","target","value","_this2","m","item","xs","sm","md","Input","fullWidth","onChange","event","updateInputValue","placeholder","endAdornment","InputAdornment","Search_default","size","filterReset","search","List","handleDelete","remove","handleDuplicate","dulipcate","Container","title","components_SearchBar_SearchBar","GridList","gridList","listItems","components_Item_Item","key","_gridList","flexWrap","App","storeInitialData","Data","vinyl_records","cds","components_List_List","filteredRecordLs","length","initialRecordItems","filteredCdLs","initialCdItems","list","itemType","toLowerCase","InitialData","Boolean","window","location","hostname","match","createMuiTheme","useNextVariants","body1","fontFamily","h2","fontSize","subtitle1","palette","primary","light","main","dark","contrastText","text","textSecondary","values","lg","xl","initialState","itemsListReducer","arguments","undefined","action","objectSpread","toConsumableArray","searchedRecord","itemsToFilter","filter","includes","alert","searchedCd","itemsToFilterCd","updateList","recordFilterdCase","indexOf","cdFilterdCase","updateFilter","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","itemsHandlerReducer","applyMiddleware","next","thunk","ReactDOM","render","es","MuiThemeProvider_default","muiTheme","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.483d6c65.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {Box , CardMedia , Avatar, Typography , Chip , Grid }  from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\nimport { Button }  from '@material-ui/core';\r\nimport * as actionCreators from '../../store/actions/index';\r\nimport FileCopy from '@material-ui/icons/FileCopy';\r\nimport '../List/List.scss'\r\n\r\nconst styles = theme => ({\r\n    root:{\r\n        display: 'flex', \r\n        justifyContent: 'space-between',\r\n        flexDirection: 'column',\r\n        overflow: 'unset',\r\n        marginTop: 20,\r\n        // marginRight: 20,\r\n        boxShadow: '0 10px 30px 0 rgba(207, 217, 230, 0.5), 10px 10px 30px 0 #e8ecf1',\r\n        borderRadius: 20,\r\n        boxSizing: 'border-box',\r\n        position: 'relative',\r\n    },\r\n    button:{\r\n        margin: '5px',\r\n        borderRadius: '20px',\r\n        width: '100px',\r\n    },\r\n    cardMedia: {\r\n        borderRadius: 20,\r\n        height: 'inherit',\r\n        padding: 20,\r\n        boxSizing: 'border-box',\r\n        backgroundColor: 'rgba(0, 0, 0, 0.85)',\r\n        backgroundBlendMode: 'soft-light',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-between',\r\n        [theme.breakpoints.down('xs')]: {height: '55vh',width: '91vw'},\r\n        [theme.breakpoints.up('xs')]: {height: '55vh',width: '92vw'},\r\n        [theme.breakpoints.up('sm')]: {height: 400, width: '380px'},\r\n    },\r\n    avatar:{\r\n        height: 50,\r\n        width: 50,\r\n    },\r\n});\r\n\r\nclass Item extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state= {\r\n            dialogBoxVisable: false\r\n        }\r\n    }\r\n\r\n    dialogBoxOpen = () => {\r\n        this.setState({\r\n            dialogBoxVisable: true\r\n        })\r\n    }\r\n\r\n    dialogBoxClose = () => {\r\n        this.setState({\r\n            dialogBoxVisable: false\r\n        })\r\n    }\r\n\r\n    dialogBoxHandler = (handleType ,listType, index ) => {\r\n        this.dialogBoxClose()\r\n        handleType === 'remove'? \r\n        this.props.itemRemove(listType , index) : this.props.itemDuplicate(listType , index)\r\n    }\r\n\r\n    dialogBox = () => {\r\n        const { classes } = this.props;\r\n        return(\r\n        <div className={\"dialogBox\"} display={this.state.dialogBoxVisable? 'flex' : 'none'}>\r\n            <Button color=\"primary\" className={classes.button} variant=\"contained\" aria-label=\"Add\" onClick= {() => this.dialogBoxHandler('duplicate' , this.props.listTitle , this.props.i)}>\r\n            <FileCopy /></Button>\r\n            <Button color=\"default\" className={classes.button} variant=\"contained\" aria-label=\"Add\" onClick= {() => this.dialogBoxHandler('remove' , this.props.listTitle , this.props.i)}>delete</Button>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n        return(\r\n            <div className={classes.root}>\r\n                \r\n                <CardMedia\r\n                    className={classes.cardMedia} \r\n                    image={this.props.image}\r\n                    onMouseEnter={this.dialogBoxOpen} \r\n                    onClick={this.dialogBoxOpen} \r\n                    onMouseLeave={this.dialogBoxClose}>\r\n                        {this.state.dialogBoxVisable? this.dialogBox() : null}\r\n                    <Grid container justify=\"space-between\" alignItems=\"center\">\r\n                        <Typography color='textPrimary' className={classes.typography} variant=\"body1\">{this.props.genre}</Typography>\r\n                        <Avatar className={classes.avatar} src={this.props.artist_image}/>\r\n                    </Grid>\r\n                    <Grid align=\"center\">\r\n                        <Typography color='textPrimary' className={classes.typographyf} variant=\"h2\">\r\n                            {this.props.artist_name.split(' ')\r\n                            .map(word => word[0].toUpperCase()+ word.slice(1))\r\n                            .join(' ')}\r\n                        </Typography>\r\n                        <Typography color='textPrimary' className={classes.typography} variant=\"subtitle1\">\r\n                            {this.props.name.split(' ')\r\n                            .map(word => word[0].toUpperCase()+ word.slice(1))\r\n                            .join(' ')}\r\n                        </Typography> \r\n                    </Grid>\r\n                        <Box display=\"flex\" \r\n                            justifyContent=\"space-between\" \r\n                            alignItems=\"center\">\r\n                            <Chip label={this.props.tracks_number} className={classes.chip}/>\r\n                            <Chip label={`${this.props.quantity_in_stock}/${this.props.quantity}`} className={classes.chip}/>\r\n                        </Box>\r\n                </CardMedia>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        itemRemove: (lsType, index) => dispatch(actionCreators.itemRemove(lsType, index)),\r\n        itemDuplicate: (lsType, index) => dispatch(actionCreators.itemDuplicate(lsType, index)) \r\n    }\r\n  }\r\n \r\n  export default connect('', mapDispatchToProps)(withStyles(styles)(Item));","import * as actionTypes from './actionTypes';\r\n\r\n\r\nexport const InitialData = (item , itemType) => {\r\n    item.artist_name = item.artist_name.toLowerCase()\r\n    item.name = item.name.toLowerCase()\r\n        \r\n    return {\r\n        type: actionTypes.STORE_INITIAL_DATA,\r\n        payload: {\r\n            item: item,\r\n            itemType: itemType\r\n        }\r\n    }\r\n}\r\n\r\nexport const storeInitialData = (list , itemType) => {\r\n    return dispatch => {   \r\n            list.map((item) => { \r\n                return(\r\n                dispatch(InitialData(item, itemType)))\r\n                })\r\n    }\r\n}\r\n\r\nexport const filterList = (search, listType) => {\r\n    const filterActionType = \r\n        listType === 'Vinyl Records' ? actionTypes.FILTER_RECORDS_LIST : actionTypes.FILTER_CDS_LIST\r\n    return {\r\n        type: filterActionType,\r\n        search\r\n        \r\n    }\r\n}\r\n\r\nexport const filterReset = (listType) => {\r\n    return {\r\n        type: actionTypes.FILTER_RESET,\r\n        listType\r\n    }\r\n}\r\n\r\nexport const itemRemove = (lsType, index) => {\r\n    return {\r\n        type: actionTypes.REMOVE,\r\n        payload: {\r\n            lsType,\r\n            index\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport const itemDuplicate = (lsType, index) => {\r\n    return {\r\n        type: actionTypes.DUPLICATE,\r\n        payload: {\r\n            lsType,\r\n            index\r\n\r\n        }\r\n    }\r\n}\r\n\r\n// export const setSelectedMovieData = (payload) => {\r\n//     const durationHandler = formatDuration(payload.contentDetails.duration) \r\n//     const publishedDateHandler = new Date(payload.snippet.publishedAt).toString().split(' ')\r\n//     const viewsHandler = formatViews(payload.statistics.viewCount)\r\n//     return {\r\n//         type: actionTypes.SET_SELECTED_MOVIE_INFO,\r\n//         payload:{\r\n//             Title: payload.snippet.title,\r\n//             ChannelTitle: payload.snippet.channelTitle,\r\n//             ChannelId: payload.snippet.channelId,\r\n//             PublishedAt: `${publishedDateHandler[1]} ${publishedDateHandler[2]}, ${publishedDateHandler[3]}`,\r\n//             FormatedDur: durationHandler,\r\n//             Duration: payload.contentDetails.duration,\r\n//             ViewCount: viewsHandler,\r\n//             SourceVC: payload.statistics.viewCount,\r\n//             VideoUrl: payload.snippet.thumbnails.medium.url,\r\n//             LikeCount:Number(payload.statistics.likeCount),\r\n//             DislikeCount: Number(payload.statistics.dislikeCount),\r\n//             FavoriteCount:Number(payload.favoriteCount),\r\n//             CommentsCount: payload.statistics.commentCount,\r\n//             Description: payload.snippet.description,\r\n//             DescriptionShorten: description(payload.snippet.description),\r\n//             VideoIdEmbedUrl: `https://www.youtube.com/embed/${payload.id}`,\r\n//             VideoIdId: payload.id,\r\n//             ReactionMode: null\r\n//             }\r\n//     }\r\n// }\r\n\r\n// export const fetchWatchMovie = (payload) => {\r\n//     return dispatch => { \r\n//             axios.get(`https://www.googleapis.com/youtube/v3/videos?part=snippet,contentDetails,statistics&id=${payload}&key=${API_KEY}`)\r\n//             .then(res => {\r\n//                 dispatch(setSelectedMovieData(res.data.items[0]))\r\n//                 dispatch(initChannelData(res.data.items[0].snippet.channelId))})\r\n//             .catch(error => console.log(error))  \r\n//     }\r\n// }\r\n\r\n// export const setChannelData = (payload) => {\r\n//     return {\r\n//         type: actionTypes.SET_CHANNEL_DATA,\r\n//         payload: {\r\n//              Thumbnail: payload.snippet.thumbnails.default.url,\r\n//              Title:payload.snippet.title,\r\n//             }\r\n//     }\r\n// }\r\n\r\n// export const initChannelData = (ChannelID) => {\r\n//     return dispatch => { \r\n//         axios.get(`https://www.googleapis.com/youtube/v3/channels?part=snippet,contentDetails,statistics&id=${ChannelID}&key=${API_KEY}`)\r\n//              .then(res => {\r\n//                  dispatch(setChannelData(res.data.items[0]))})\r\n//                 .catch(error => console.log(error))       \r\n//     }\r\n// }\r\n\r\n// export const setSelectedMovieComments = (payload) => {\r\n//     const pubdate = formatDate(payload.snippet.topLevelComment.snippet.publishedAt)\r\n\r\n//     return {\r\n//         type: actionTypes.SET_MOVIE_COMMENTS,\r\n//         payload:{\r\n//             CommentId:payload.id,\r\n//             Comment: payload.snippet.topLevelComment.snippet.textDisplay,\r\n//             UserPic: payload.snippet.topLevelComment.snippet.authorProfileImageUrl.replace('s28','s40'),\r\n//             AuthorDisplayName: payload.snippet.topLevelComment.snippet.authorDisplayName,\r\n//             LikeCount: payload.snippet.topLevelComment.snippet.likeCount,\r\n//             DislikeCount: payload.snippet.topLevelComment.snippet.dislikeCount? payload.snippet.topLevelComment.snippet.dislikeCount : 0 ,\r\n//             ReactionMode: null,\r\n//             PublishdAtSource: payload.snippet.topLevelComment.snippet.publishedAt,\r\n//             PublishedAt: pubdate\r\n//         }\r\n        \r\n//     }\r\n// }\r\n\r\n// export const setSelectedMovieDataComments = (payload) => {\r\n//     return {\r\n//         type: actionTypes.SET_MOVIE_DATA_COMMENTS,\r\n//         payload    \r\n//     }\r\n// }\r\n\r\n// export const clearCommentsList = (dataMode) => {\r\n//     return {\r\n//     type: actionTypes.CLEAR_COMMENTS_LIST,\r\n//     payload: dataMode\r\n//     }\r\n// }\r\n\r\n// export const initMovieComments = (movieId) => {\r\n//     return dispatch => {   \r\n//         axios.all([\r\n//             axios.get(`https://www.googleapis.com/youtube/v3/commentThreads?part=snippet&videoId=${movieId}&key=${API_KEY}`),\r\n//             axios.get(`https://yt-clone-e7862.firebaseio.com/comments/${movieId}.json`)\r\n//         ])\r\n//         .then(axios.spread((res1, res2) => {\r\n//             res1.data.items.map(comment => \r\n//                 dispatch(setSelectedMovieComments(comment)))\r\n//             Object.values(res2.data).map(comment =>\r\n//                 dispatch(setSelectedMovieDataComments(comment)))\r\n//             }))\r\n//             .catch(error => console.log(error))\r\n//     }\r\n// }\r\n\r\n// export const reactionHandler = (reactionMode,reactiontype,reactionid) => {\r\n//         if (reactiontype === 'movie'){ \r\n//         return {\r\n//             type: actionTypes.MOVIE_REACTION_ADJUSMENTS,\r\n//             reaction: reactionMode\r\n//         }\r\n//         }else if (reactiontype === 'comment'){\r\n//             return{\r\n//             type: actionTypes.COMMENT_REACTION_ADJUSMENTS,\r\n//             reaction: reactionMode,\r\n//             id:reactionid\r\n//         }\r\n// }\r\n// }\r\n\r\n// export const handleCommentSubmit = (comment,movieId) => {\r\n//     const time = new Date(Date.now()).toISOString()\r\n//     const timeConverted = formatDate(time)\r\n//     const commentPayload = {\r\n//         AuthorDisplayName:'Benny Pakman',\r\n//         Comment: comment,\r\n//         CommentId: comment,\r\n//         DislikeCount: 0,\r\n//         LikeCount: 0,\r\n//         PublishedAt: timeConverted,\r\n//         ReactionMode: \"\",\r\n//         UserPic: 'https://yt3.ggpht.com/-PcciNQlrmUE/AAAAAAAAAAI/AAAAAAAAAAA/D1j1-rfjOpw/s88-c-k-no-mo-rj-c0xffffff/photo.jpg',\r\n//       }\r\n//       axios.post(`https://yt-clone-e7862.firebaseio.com/comments/${movieId}.json`,commentPayload)\r\n\r\n//       return (\r\n//         {\r\n//         type: actionTypes.ADD_COMMENT,\r\n//         payload: commentPayload\r\n//         }\r\n//     )\r\n// }","export const STORE_INITIAL_DATA = 'STORE_INITIAL_DATA';\r\nexport const FILTER_RECORDS_LIST = 'FILTER_RECORDS_LIST';\r\nexport const FILTER_CDS_LIST = 'FILTER_CDS_LIST';\r\nexport const FILTER_RESET = 'FILTER_RESET';\r\nexport const REMOVE = 'REMOVE';\r\nexport const DUPLICATE = 'DUPLICATE'","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {InputAdornment , Input , Grid }  from '@material-ui/core';\r\nimport * as actionCreators from '../../store/actions/index';\r\nimport { Button }  from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = () => ({\r\n    root:{\r\n        marginTop: 20\r\n    },\r\n    button:{\r\n        borderRadius: 20,\r\n        margin: 2\r\n    },\r\n  });\r\n  \r\n\r\nclass SearchBar extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state= {\r\n            inputValue: ''\r\n        }\r\n    }\r\n\r\n    updateInputValue(evt) {\r\n        this.setState({\r\n          inputValue: evt.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit = () => {\r\n        this.props.filterList(this.state.inputValue, this.props.listType)\r\n        this.setState({\r\n            inputValue: ''\r\n          });\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n        return(\r\n            <Grid container className={classes.root}  justify=\"space-between\" alignItems=\"center\" m='50px'>\r\n                <Grid item xs={6} sm={9} md={10}>\r\n                    <Input fullWidth\r\n                        value={this.state.inputValue}\r\n                        onChange={event => this.updateInputValue(event)}\r\n                        placeholder = {`Search for ${this.props.listType}`}\r\n                        endAdornment={\r\n                            <InputAdornment position=\"end\">\r\n                            <SearchIcon/>\r\n                            </InputAdornment>}/>\r\n                </Grid>\r\n                <Grid item> \r\n                    <Button \r\n                        size=\"small\" \r\n                        variant=\"contained\" \r\n                        className={classes.button} \r\n                        color=\"primary\" \r\n                        onClick = {event => this.onSubmit(event)}>search\r\n                    </Button>\r\n                    <Button \r\n                        size=\"small\" \r\n                        variant=\"outlined\" \r\n                        aria-label=\"Add\" \r\n                        className={classes.button} \r\n                        color=\"primary\" \r\n                        onClick = {() => this.props.filterReset(this.props.listType)}>reset\r\n                    </Button>\r\n                \r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n      filterList: (search, listType) => dispatch(actionCreators.filterList(search, listType)),\r\n      filterReset: (listType) => dispatch(actionCreators.filterReset(listType))\r\n  }\r\n}\r\n\r\nexport default connect('',mapDispatchToProps)(withStyles(styles)(SearchBar))\r\n","import React, { Component } from 'react';\r\nimport Item from '../Item/Item';\r\nimport SearchBar from '../SearchBar/SearchBar';\r\nimport { Typography }  from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { GridList , Container}  from '@material-ui/core';\r\nimport './List.scss'\r\n\r\nconst styles = theme => ({\r\n  root:{\r\n    margin: '20px 0'\r\n  },\r\n  gridList: {\r\n    justifyContent: 'space-between',\r\n    [theme.breakpoints.down('xs')]: {\r\n      flexWrap: 'nowrap',\r\n    },\r\n    [theme.breakpoints.up('sm')]: {\r\n      flexWrap: 'wrap',\r\n    },\r\n  }\r\n});\r\n\r\nclass List extends Component{\r\n  handleDelete = (lsType, index) => {\r\n    this.props.remove(lsType, index)\r\n  }\r\n\r\n  handleDuplicate = (lsType, index) => {\r\n    this.props.dulipcate(lsType, index)\r\n  }\r\n\r\n  render(){ \r\n    const { classes } = this.props;\r\n    return (\r\n      <Container className={classes.root}>\r\n        <Typography variant=\"h2\" color=\"commonBlack\">{this.props.title}</Typography>\r\n        <SearchBar listType = {this.props.title === 'Vinyl Records' ? 'Vinyl Records' : 'Cd'}/>\r\n        <GridList className={classes.gridList}>\r\n            {this.props.listItems.map((item, index) => \r\n            <Item \r\n            listTitle = {this.props.title}\r\n            key = {index}\r\n            i = {index}\r\n            genre={item.genre}\r\n            artist_image={item.artist_image}\r\n            artist_name={item.artist_name}\r\n            name={item.name}\r\n            image={item.image}\r\n            tracks_number={item.tracks_number}\r\n            quantity_in_stock={item.quantity_in_stock}\r\n            quantity={item.quantity}/>\r\n        )}\r\n        </GridList>\r\n        </Container >\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default withStyles(styles)(List);\r\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actionCreators from './store/actions/index';\nimport List from './components/List/List'\nimport Data from './utilites/data';\n\nclass App extends Component{\n  componentDidMount(){\n    this.props.storeInitialData(Data.vinyl_records, 'records')\n    this.props.storeInitialData(Data.cds, 'cds')   \n  }\n  \nrender(){\n  return (\n    <div className=\"App\">\n      <List listItems= { \n        this.props.filteredRecordLs.length > 0 ? \n        this.props.filteredRecordLs : \n        this.props.initialRecordItems\n      } \n            title= 'Vinyl Records'/>              \n      <List listItems={\n        this.props.filteredCdLs.length > 0 ? \n        this.props.filteredCdLs : \n        this.props.initialCdItems\n              } \n            title= 'Cds'/>\n    </div>\n  );\n}\n}\n\nconst mapStateToProps = state => {\n  return {\n    initialRecordItems: state.initialRecordItems,\n    initialCdItems: state.initialCdItems,\n    filteredRecordLs: state.filteredRecordLs,\n    filteredCdLs: state.filteredCdLs\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n      storeInitialData: (list, type) => dispatch(actionCreators.storeInitialData(list, type)),\n  }\n}\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    useNextVariants: true,\r\n    body1: {\r\n      fontFamily: `'Varela Round', sans-serif`\r\n    },\r\n    h2: {\r\n      fontFamily: `'Suez One', serif`,\r\n      fontSize: '1.5rem',\r\n    },\r\n    subtitle1: {\r\n      fontFamily: `'Varela Round', sans-serif`\r\n    }\r\n  },\r\n  palette: {\r\n    primary: {\r\n        light: '#63ccff',\r\n        main: '#1d5fd8',\r\n        dark: '#006db3',\r\n        contrastText: '#fff',\r\n    },\r\n    text:{\r\n        primary : '#fff',\r\n        textSecondary : 'rgba(0, 0, 0, 0.85)'\r\n    }\r\n    },\r\n    breakpoints: {\r\n      values: {\r\n        xs: 375,\r\n        sm: 600,\r\n        md: 960,\r\n        lg: 1280,\r\n        xl: 1920,\r\n      }\r\n    }\r\n});\r\n\r\nexport default theme;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = { \r\n    initialCdItems:[],\r\n    initialRecordItems:[],\r\n    filteredRecordLs:[],\r\n    filteredCdLs:[]\r\n};\r\n\r\nconst itemsListReducer = (state= initialState, action) => {\r\n    switch(action.type){\r\n        case actionTypes.STORE_INITIAL_DATA:\r\n            if(action.payload.itemType === 'records'){ \r\n                return ({\r\n                    ...state,\r\n                    initialRecordItems: [action.payload.item, ...state.initialRecordItems]\r\n                })\r\n            }else{ \r\n                return ({\r\n                    ...state,\r\n                    initialCdItems: [action.payload.item, ...state.initialCdItems]\r\n                })\r\n            }\r\n        case actionTypes.FILTER_RECORDS_LIST:\r\n            const searchedRecord = action.search.toLowerCase();\r\n            const itemsToFilter = state.initialRecordItems.filter(item => {\r\n                return (item.artist_name.includes(searchedRecord) || item.name.includes(searchedRecord))\r\n            })\r\n            itemsToFilter.length <=0 ? alert('no items as been found'): alert(`${itemsToFilter.length} items found`)\r\n\r\n            return {\r\n                ...state,\r\n                filteredRecordLs: itemsToFilter\r\n            }\r\n            case actionTypes.FILTER_CDS_LIST:\r\n                    const searchedCd = action.search.toLowerCase();\r\n                    const itemsToFilterCd = state.initialCdItems.filter(item => {\r\n                        return (item.artist_name.includes(searchedCd) || item.name.includes(searchedCd))\r\n                    })\r\n                    itemsToFilterCd.length <=0 ? alert('no items as been found'): alert(`${itemsToFilterCd.length} items found`)\r\n        \r\n                    return {\r\n                        ...state,\r\n                        filteredCdLs: itemsToFilterCd\r\n                    }\r\n  \r\n        case actionTypes.FILTER_RESET:\r\n            return {\r\n                ...state,\r\n                filteredRecordLs: action.listType === 'Vinyl Records' ? [] : state.filteredRecordLs,\r\n                filteredCdLs: action.listType === 'Cd' ? [] : state.filteredCdLs\r\n            } \r\n        case actionTypes.REMOVE:\r\n                let updateList = []\r\n                const recordFilterdCase = state.initialRecordItems.indexOf(state.filteredRecordLs[action.payload.index])\r\n                const cdFilterdCase = state.initialCdItems.indexOf(state.filteredCdLs[action.payload.index])\r\n                if(action.payload.lsType === 'Vinyl Records'){\r\n                    if(recordFilterdCase >= 0){\r\n                        updateList = state.initialRecordItems.filter((item, i) => i !== recordFilterdCase)\r\n                    }else{\r\n                        updateList = state.initialRecordItems.filter((item, i) => i !== action.payload.index)  \r\n                    }\r\n                }else if(action.payload.lsType === 'Cds'){\r\n                    if(cdFilterdCase >= 0){\r\n                        updateList = state.initialCdItems.filter((item, i) => i !== cdFilterdCase)\r\n                    }else{\r\n                        updateList = state.initialCdItems.filter((item, i) => i !== action.payload.index)  \r\n                    }\r\n                }\r\n            return {\r\n                ...state,\r\n                initialRecordItems: action.payload.lsType === 'Vinyl Records' ?\r\n                    updateList : state.initialRecordItems,\r\n                initialCdItems: action.payload.lsType === 'Cds' ?\r\n                    updateList : state.initialCdItems,\r\n                filteredRecordLs:action.payload.lsType === 'Vinyl Records' ?\r\n                    state.filteredRecordLs.filter((item, i) => i !== action.payload.index) : state.filteredRecordLs,\r\n                filteredCdLs:action.payload.lsType === 'Cds' ?\r\n                    state.filteredCdLs.filter((item, i) => i !== action.payload.index) : state.filteredCdLs\r\n            } \r\n        case actionTypes.DUPLICATE:\r\n                let updateFilter = '' \r\n                if(state.filteredRecordLs.length > 0 && action.payload.lsType === 'Vinyl Records'){\r\n                     updateFilter= 'RecordsLs'\r\n                }else if(state.filteredCdLs.length > 0 && action.payload.lsType === 'Cds'){\r\n                     updateFilter= 'CdLs'\r\n                }\r\n         \r\n                return {\r\n                    ...state,\r\n                    initialRecordItems: action.payload.lsType === 'Vinyl Records' ?\r\n                        [...state.initialRecordItems, state.initialRecordItems[action.payload.index]] : state.initialRecordItems,\r\n                    initialCdItems: action.payload.lsType === 'Cds' ?\r\n                        [...state.initialCdItems, state.initialCdItems[action.payload.index]] : state.initialCdItems,\r\n                    filteredRecordLs: updateFilter === 'RecordsLs' ?\r\n                        [...state.filteredRecordLs, state.filteredRecordLs[action.payload.index]] : state.filteredRecordLs,\r\n                    filteredCdLs: updateFilter === 'CdLs' ?\r\n                        [...state.filteredCdLs, state.filteredCdLs[action.payload.index]] : state.filteredCdLs\r\n\r\n                } \r\n        default: \r\n            return state;\r\n    };\r\n    \r\n};\r\n\r\nexport default itemsListReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// THEME\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport muiTheme from './theme/muiTheme';\n\nimport itemsHandlerReducer from './store/reducers/itemsHandlerReducer';\n\n\nconst logger = store => {\n    return next => {\n        return action => {\n            const result = next(action);\n            return result;\n        }\n    }\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(itemsHandlerReducer, composeEnhancers(applyMiddleware(logger , thunk)));\n\nReactDOM.render(<Provider store={store}><MuiThemeProvider theme={muiTheme}><App /></MuiThemeProvider></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}