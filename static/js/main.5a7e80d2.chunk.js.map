{"version":3,"sources":["components/Modal/SimpleModal.js","store/actions/itemsHandler.js","store/actions/actionTypes.js","components/Modal/SimpleModalStyle.js","components/Item/ItemStyle.js","components/Item/DialogBox.js","components/Item/Item.js","components/SearchBar/SearchBar.js","components/SearchBar/SearchBarStyle.js","components/List/List.js","components/List/ListStyle.js","App.js","serviceWorker.js","theme/muiTheme.js","store/reducers/itemsHandlerReducer.js","index.js"],"names":["SimpleModal","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","dialogBoxHandler","handleType","itemRemove","listTitle","indexItem","close","itemDuplicate","modalMode","modalType","classes","react_default","a","createElement","react","Button","color","className","button","variant","aria-label","onClick","state","open","Modal","modal","aria-labelledby","aria-describedby","onClose","Box","paper","IconButton","icon","Close_default","fontSize","Avatar","avatar","src","image","Grid","Typography","align","artist_name","name","Component","connect","dispatch","lsType","index","type","payload","actionCreators","withStyles","theme","_paper","display","justifyContent","alignItems","position","defineProperty","breakpoints","down","width","height","up","palette","background","shadows","margin","borderRadius","alignSelf","top","ItemStyle","_cardMedia","cardMedia","flexDirection","padding","boxSizing","backgroundColor","backgroundBlendMode","boxShadow","marginRight","itemCdData","itemData","dialogBox","zIndex","right","DialogBox","modalOpen","FileCopy_default","styles","Item","setState","modalClose","dialogBoxHandle","boolean","dialogBoxVisable","_this2","itemType","listType","artistName","split","map","word","toUpperCase","slice","join","itemName","Modal_SimpleModal","CardMedia","style","onMouseEnter","onMouseLeave","Item_DialogBox","concat","genre","artist_image","Chip","label","tracks_number","chip","quantity_in_stock","quantity","SearchBar","onSubmit","filterList","inputValue","evt","target","value","container","root","item","xs","sm","md","Input","fullWidth","input","onChange","event","updateInputValue","placeholder","endAdornment","InputAdornment","Search_default","size","filterReset","search","searchKey","toLowerCase","List","Container","title","components_SearchBar_SearchBar","GridList","gridList","listItems","components_Item_Item","key","_gridList","flexWrap","App","storeInitialData","Data","vinyl_records","cds","components_List_List","filteredRecordLs","length","initialRecordItems","filteredCdLs","initialCdItems","list","InitialData","Boolean","window","location","hostname","match","createMuiTheme","typography","useNextVariants","body1","fontFamily","h2","subtitle1","primary","light","main","dark","contrastText","text","textSecondary","values","lg","xl","initialState","itemsListReducer","arguments","undefined","action","objectSpread","toConsumableArray","itemsToFilter","filter","includes","alert","searchedCd","itemsToFilterCd","updateList","recordFilterdCase","indexOf","cdFilterdCase","i","updateFilter","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","itemsHandlerReducer","applyMiddleware","next","thunk","ReactDOM","render","es","MuiThemeProvider_default","muiTheme","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5a7e80d2.chunk.js","sourcesContent":["import React, { Component , Fragment } from 'react';\r\n\r\n// import styles\r\nimport { Avatar, Typography, Grid, IconButton, Box, Modal, Button ,withStyles }  from '@material-ui/core';\r\nimport styles from './SimpleModalStyle';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n// import redux\r\nimport { connect } from 'react-redux';\r\nimport * as actionCreators from '../../store/actions/index';\r\n\r\nclass SimpleModal extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state= {\r\n            open: true,\r\n        }\r\n    }\r\n    \r\n// this.props.itemRemove, this.props.itemDuplicate - dispatch actions\r\n// this.props.close - function passed from parent component (Item)\r\n    dialogBoxHandler = (handleType) => {\r\n        if(handleType === 'remove'){\r\n            this.props.itemRemove(this.props.listTitle , this.props.indexItem) \r\n            this.props.close()\r\n        }else{ \r\n            this.props.itemDuplicate(this.props.listTitle , this.props.indexItem)\r\n        }\r\n    }\r\n// dynamic items to be rendered into modal   \r\n    modalMode = (modalType) => {\r\n        const { classes } = this.props;\r\n        switch(modalType){\r\n          case 'remove':\r\n            return(\r\n                <Fragment>\r\n                    <Button \r\n                        color=\"primary\" \r\n                        className={classes.button} \r\n                        variant=\"contained\" aria-label=\"Add\" \r\n                        onClick={() => this.dialogBoxHandler('remove')}>\r\n                        yes\r\n                    </Button>\r\n                    <Button \r\n                        color=\"primary\" \r\n                        variant=\"outlined\" \r\n                        aria-label=\"Add\" \r\n                        className={classes.button} \r\n                        onClick={this.props.close}>\r\n                        no\r\n                    </Button>\r\n                </Fragment> \r\n            )\r\n            case 'duplicate':\r\n                this.dialogBoxHandler('duplicate')\r\n                return(\r\n                    <Button \r\n                        color=\"primary\" \r\n                        className={classes.button} \r\n                        variant=\"contained\" aria-label=\"Add\" \r\n                        onClick={this.props.close}>\r\n                        thanxxxx\r\n                    </Button>\r\n                    )\r\n            default:\r\n                break;\r\n        }\r\n      }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n        return(\r\n        <Fragment>\r\n            <Modal className={classes.modal}aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                onClose={this.props.close}\r\n                open={this.state.open}>\r\n                    <Box className={classes.paper}>\r\n                       <IconButton aria-label=\"Delete\" className={classes.icon}>\r\n                           <CloseIcon fontSize=\"small\" onClick={this.props.close}/>\r\n                       </IconButton>     \r\n                        <Avatar className={classes.avatar} src={this.props.image}/> \r\n                        <Grid>\r\n                        <Typography align=\"center\" variant=\"h2\">\r\n                            {this.props.modalType === 'remove'?\r\n                            'Are you sure you would like to remove' : 'you have just duplicate:'}\r\n                        </Typography>\r\n                        <Typography align=\"center\" variant=\"body1\">\r\n                            {this.props.artist_name} | {this.props.name} \r\n                            {this.props.modalType === 'remove'? '?' : null}\r\n                        </Typography>\r\n                        </Grid>\r\n                        <Grid>\r\n                        {this.modalMode(this.props.modalType)}\r\n                        </Grid>  \r\n                    </Box>\r\n            </Modal>  \r\n        </Fragment>\r\n    )\r\n}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        itemRemove: (lsType, index) => dispatch(actionCreators.itemRemove(lsType, index)),\r\n        itemDuplicate: (lsType, index) => dispatch(actionCreators.itemDuplicate(lsType, index)) \r\n    }\r\n  }\r\n \r\n  export default connect('', mapDispatchToProps)(withStyles(styles)(SimpleModal));","import * as actionTypes from './actionTypes';\r\n\r\n\r\n// lowering case names to make sure all items names are looking the same\r\n// and forwarding it to reducer\r\nexport const InitialData = (item , itemType) => {\r\n    item.artist_name = item.artist_name.toLowerCase()\r\n    item.name = item.name.toLowerCase() \r\n    return {\r\n        type: actionTypes.STORE_INITIAL_DATA,\r\n        payload: {\r\n            item: item,\r\n            itemType: itemType\r\n        }\r\n    }\r\n}\r\n// reaciving data from data.Json via componentDidMount from App.js\r\n// and mapping them into single items to be passed to \r\n// storing via InitialData function above\r\nexport const storeInitialData = (list , itemType) => {\r\n    return dispatch => {   \r\n            list.map((item) => { \r\n                return(\r\n                dispatch(InitialData(item, itemType)))\r\n                })\r\n    }\r\n}\r\n// filtering action:\r\n// lowering case names to make sure all items names are looking the same\r\n// *********************************************\r\nexport const filterList = (search, listType) => {\r\n    const searchKey = search.toLowerCase();\r\n    const filterActionType = \r\n        listType === 'Vinyl Records' ? actionTypes.FILTER_RECORDS_LIST : actionTypes.FILTER_CDS_LIST\r\n    return {\r\n        type: filterActionType,\r\n        searchKey\r\n        \r\n    }\r\n}\r\n// reset filtering action:\r\nexport const filterReset = (listType) => {\r\n    return {\r\n        type: actionTypes.FILTER_RESET,\r\n        listType\r\n    }\r\n}\r\n// removal items action:\r\nexport const itemRemove = (lsType, index) => {\r\n    return {\r\n        type: actionTypes.REMOVE,\r\n        payload: {\r\n            lsType,\r\n            index\r\n        }\r\n    }\r\n}\r\n// duplicate items action:\r\nexport const itemDuplicate = (lsType, index) => {\r\n    return {\r\n        type: actionTypes.DUPLICATE,\r\n        payload: {\r\n            lsType,\r\n            index\r\n        }\r\n    }\r\n}","export const STORE_INITIAL_DATA = 'STORE_INITIAL_DATA';\r\nexport const FILTER_RECORDS_LIST = 'FILTER_RECORDS_LIST';\r\nexport const FILTER_CDS_LIST = 'FILTER_CDS_LIST';\r\nexport const FILTER_RESET = 'FILTER_RESET';\r\nexport const REMOVE = 'REMOVE';\r\nexport const DUPLICATE = 'DUPLICATE'","export default theme => ({\r\n    modal:{\r\n        display:'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    paper: {\r\n        position: 'absolute',\r\n        justifyContent: 'space-around',\r\n        [theme.breakpoints.down('xs')]: {\r\n          width: '85vw',\r\n          height: '60vh'\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n          width: 500,\r\n          height: 280\r\n        },\r\n        backgroundColor: theme.palette.background.paper,\r\n        boxShadow: theme.shadows[5],\r\n        padding: 10,\r\n        outline: 'none',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        borderRadius: 20,\r\n\r\n    },\r\n    avatar:{\r\n        height: 150,\r\n        width: 150,\r\n    },\r\n    button:{\r\n        margin: '5px',\r\n        borderRadius: '20px',\r\n        width: '100px',\r\n    },\r\n    icon:{\r\n        alignSelf: 'flex-start',\r\n        position: 'absolute',\r\n        top: 15\r\n    }\r\n\r\n});\r\n","export default theme => ({\r\n    button:{\r\n        margin: '5px',\r\n        borderRadius: '20px',\r\n        width: '100px',\r\n    },\r\n    cardMedia: {\r\n        justifyContent: 'space-between',\r\n        position: 'relative',\r\n        flexDirection: 'column',\r\n        height: 'inherit',\r\n        padding: '30px 20px',\r\n        boxSizing: 'border-box',\r\n        backgroundColor: 'rgba(0, 0, 0, 0.85)',\r\n        backgroundBlendMode: 'soft-light',\r\n        display: 'flex',\r\n        boxShadow: '0 10px 30px 0 rgba(207, 217, 230, 0.5), 10px 10px 30px 0 #e8ecf1',\r\n        [theme.breakpoints.down('xs')]: {height: '53vh',width: '91vw'},\r\n        [theme.breakpoints.up('xs')]: {height: '52vh',width: '92vw'},\r\n        [theme.breakpoints.up('sm')]: {height: 400, width: 380, marginRight: 0},\r\n        margin: '0 20px 30px 0' \r\n    },\r\n\r\n    avatar:{\r\n        height: 50,\r\n        width: 50,\r\n    },\r\n\r\n    itemCdData:{\r\n        width: '110px!important',\r\n    },\r\n\r\n    itemData:{\r\n        display:'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        width: '-webkit-fill-available',\r\n    },\r\n    \r\n    dialogBox:{\r\n        position: 'absolute',\r\n        background: '#7d7d7df0',\r\n        width: 'inherit',\r\n        height: 'inherit',\r\n        borderRadius: 'inherit',\r\n        zIndex: 1,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        top: 0,\r\n        right: 0\r\n    },\r\n})","import React, { Component } from 'react';\r\n\r\n// import styles\r\nimport { Grid, Button, withStyles }  from '@material-ui/core';\r\nimport FileCopy from '@material-ui/icons/FileCopy';\r\nimport styles from './ItemStyle';\r\n\r\nclass DialogBox extends Component {\r\n   \r\n    render(){\r\n        const { classes } = this.props;\r\n        return(\r\n            <Grid className={ classes.dialogBox }>\r\n            <Button color=\"primary\" \r\n                    className={classes.button} \r\n                    variant=\"contained\" aria-label=\"Add\" \r\n                    onClick={() => this.props.modalOpen('duplicate')}>\r\n                    <FileCopy/>\r\n            </Button>\r\n            <Button color=\"default\" \r\n                    className={classes.button}\r\n                    variant=\"contained\" \r\n                    aria-label=\"Add\" \r\n                    onClick={() => this.props.modalOpen('remove')}>\r\n                        delete\r\n            </Button>\r\n        </Grid>\r\n    )\r\n}\r\n}\r\n\r\n  export default (withStyles(styles)(DialogBox));","import React, { Component } from 'react';\r\n\r\n// import components\r\nimport SimpleModal from '../Modal/SimpleModal';\r\nimport DialogBox from './DialogBox';\r\n\r\n// import styles\r\nimport { CardMedia, Avatar, Typography, Chip, Grid, withStyles }  from '@material-ui/core';\r\nimport styles from './ItemStyle';\r\n\r\nclass Item extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state= {\r\n            dialogBoxVisable: false,\r\n            modalType: null,\r\n        }\r\n    }\r\n    // set modal type that will also handle it to render \r\n    modalOpen = (type) => {\r\n        this.setState({  modalType: type })\r\n    }\r\n    // set modal state type to null that will also handle to be removed\r\n    modalClose = () => {\r\n        this.setState({ modalType: null })\r\n    }\r\n    // switch dialog state to be render/removed\r\n    dialogBoxHandle = (boolean) => {\r\n        this.setState({ dialogBoxVisable: boolean})\r\n    }\r\n \r\n    render(){\r\n        const { classes } = this.props;\r\n        // shortcut to ternery operator\r\n        const itemType = this.props.listType === 'Cds';\r\n        // upper case names\r\n        const artistName = this.props.artist_name.split(' ').map(word => word[0].toUpperCase()+ word.slice(1)).join(' ');\r\n        const itemName = this.props.name.split(' ').map(word => word[0].toUpperCase()+ word.slice(1)).join(' ')\r\n        return(\r\n                \r\n        <li>\r\n            {this.state.modalType ?\r\n            <SimpleModal \r\n                close={this.modalClose}\r\n                modalType={this.state.modalType}\r\n                listTitle={this.props.listTitle}\r\n                indexItem={this.props.indexItem}\r\n                image={this.props.image}\r\n                name={this.props.name}\r\n                artist_name={this.props.artist_name}\r\n                /> : null}\r\n            <CardMedia\r\n                className= {classes.cardMedia}\r\n                style={itemType ? {borderRadius: '50%', alignItems: 'center'} : {borderRadius: 20}} \r\n                image={this.props.image}\r\n                onMouseEnter={()=> this.dialogBoxHandle(true)} \r\n                onClick={()=> this.dialogBoxHandle(true)} \r\n                onMouseLeave={()=> this.dialogBoxHandle(false)}>\r\n                {this.state.dialogBoxVisable? <DialogBox modalOpen={this.modalOpen}/> : null}\r\n                <Grid className={ itemType ? `${classes.itemData} ${classes.itemCdData}` : classes.itemData} >\r\n                    <Typography color='textPrimary' variant=\"body1\">{this.props.genre}</Typography>\r\n                    <Avatar className={classes.avatar} src={this.props.artist_image}/>\r\n                </Grid>\r\n                <Grid align=\"center\">\r\n                    <Typography color='textPrimary' variant=\"h2\">\r\n                        {artistName}\r\n                    </Typography>\r\n                    <Typography color='textPrimary' variant=\"subtitle1\">\r\n                        {itemName}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid className={ itemType ? `${classes.itemData} ${classes.itemCdData}` : classes.itemData} >\r\n                    <Chip label={this.props.tracks_number} className={classes.chip}/>\r\n                    <Chip label={`${this.props.quantity_in_stock}/${this.props.quantity}`} className={classes.chip}/>\r\n                </Grid>\r\n            </CardMedia>\r\n        </li>\r\n    )\r\n}\r\n}\r\n\r\n  export default (withStyles(styles)(Item));","import React, { Component } from 'react';\r\n\r\n// import styles\r\nimport {InputAdornment , Input , Grid, withStyles, Button }  from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport styles from './SearchBarStyle';\r\n\r\n// import redux\r\nimport * as actionCreators from '../../store/actions/index';\r\nimport { connect } from 'react-redux';\r\n\r\nclass SearchBar extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state= {\r\n            inputValue: ''\r\n        }\r\n    }\r\n// chatching and storing input value\r\n    updateInputValue(evt) {\r\n        this.setState({\r\n          inputValue: evt.target.value\r\n        });\r\n    }\r\n// this.props.filterList - dispatch actions\r\n// reset state input value\r\n    onSubmit = () => {\r\n        this.props.filterList(this.state.inputValue, this.props.listType)\r\n        this.setState({\r\n            inputValue: ''\r\n          });\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n        return(\r\n            <Grid container className={classes.root}>\r\n                <Grid item xs={6} sm={9} md={10}>\r\n                    <Input fullWidth className={classes.input} \r\n                        value={this.state.inputValue}\r\n                        onChange={event => this.updateInputValue(event)}\r\n                        placeholder = {`Search for ${this.props.listType}`}\r\n                        endAdornment={\r\n                            <InputAdornment position=\"end\">\r\n                            <SearchIcon/>\r\n                            </InputAdornment>}/>\r\n                </Grid>\r\n                <Grid item> \r\n                    <Button \r\n                        size=\"small\" variant=\"contained\"\r\n                        className={classes.button} \r\n                        color=\"primary\" \r\n                        onClick = {event => this.onSubmit(event)}>search\r\n                    </Button>\r\n                    <Button \r\n                        size=\"small\" \r\n                        variant=\"outlined\" \r\n                        aria-label=\"Add\" \r\n                        className={classes.button} \r\n                        color=\"primary\" \r\n                        onClick = {() => this.props.filterReset(this.props.listType)}>reset\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n      filterList: (search, listType) => dispatch(actionCreators.filterList(search, listType)),\r\n      filterReset: (listType) => dispatch(actionCreators.filterReset(listType))\r\n  }\r\n}\r\n\r\nexport default connect('',mapDispatchToProps)(withStyles(styles)(SearchBar))\r\n","export default styles => ({\r\n        root:{\r\n            margin: '20px 0',\r\n            justifyContent: 'space-between',\r\n            alignItems:'center',\r\n        },\r\n        button:{\r\n            borderRadius: 20,\r\n            margin: 2\r\n        },\r\n        input:{\r\n            fontSize: '14px!important',\r\n            color: 'black!important'\r\n        }\r\n      });","import React, { Component } from 'react';\r\n\r\n// import components\r\nimport Item from '../Item/Item';\r\nimport SearchBar from '../SearchBar/SearchBar';\r\n\r\n// import styles\r\nimport { Typography, withStyles , GridList , Container }  from '@material-ui/core';\r\nimport styles from './ListStyle'; \r\nimport './List.scss'\r\n\r\n\r\nclass List extends Component{   \r\n  render(){ \r\n    const { classes } = this.props;\r\n    return (\r\n      <Container className={classes.root}>\r\n        <Typography variant=\"h2\">{this.props.title}</Typography>\r\n        <SearchBar listType = {this.props.title === 'Vinyl Records' ? 'Vinyl Records' : 'Cd'}/>\r\n        <GridList className={classes.gridList}>\r\n            {this.props.listItems.map((item, index) => \r\n              <Item \r\n                  listType={this.props.title}\r\n                  listTitle = {this.props.title}\r\n                  key = {index}\r\n                  indexItem = {index}\r\n                  genre={item.genre}\r\n                  artist_image={item.artist_image}\r\n                  artist_name={item.artist_name}\r\n                  name={item.name}\r\n                  image={item.image}\r\n                  tracks_number={item.tracks_number}\r\n                  quantity_in_stock={item.quantity_in_stock}\r\n                  quantity={item.quantity}/>\r\n            )}\r\n        </GridList>\r\n        </Container>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default withStyles(styles)(List);\r\n\r\n","export default theme => ({\r\n        root:{\r\n          margin: '30px auto'\r\n        },\r\n        gridList: {\r\n          justifyContent: 'space-between',\r\n          [theme.breakpoints.down('xs')]: {\r\n            flexWrap: 'nowrap',\r\n          },\r\n          [theme.breakpoints.up('sm')]: {\r\n            flexWrap: 'wrap',\r\n          },\r\n        },\r\n      });","import React, { Component } from 'react';\n\n// import components\nimport List from './components/List/List';\nimport Data from './utilites/data';\n\n// import redux\nimport { connect } from 'react-redux';\nimport * as actionCreators from './store/actions/index';\n\nclass App extends Component{\n\n  // this.props.storeInitialData, this.props.storeInitialData - dispatch actions\n  // to store data in different Arreys inside the global store\n  componentDidMount(){\n    this.props.storeInitialData(Data.vinyl_records, 'records')\n    this.props.storeInitialData(Data.cds, 'cds')   \n  }\n  \n  render(){\n    return (\n      <div className=\"App\">\n        <List listItems= { \n          this.props.filteredRecordLs.length > 0 ? \n          this.props.filteredRecordLs : \n          this.props.initialRecordItems} \n          title= 'Vinyl Records'/>              \n        <List listItems={\n          this.props.filteredCdLs.length > 0 ? \n          this.props.filteredCdLs : \n          this.props.initialCdItems} \n          title= 'Cds'/>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    initialRecordItems: state.initialRecordItems,\n    initialCdItems: state.initialCdItems,\n    filteredRecordLs: state.filteredRecordLs,\n    filteredCdLs: state.filteredCdLs\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n      storeInitialData: (list, type) => dispatch(actionCreators.storeInitialData(list, type)),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    useNextVariants: true,\r\n    body1: {\r\n      fontFamily: `'Varela Round', sans-serif`\r\n    },\r\n    h2: {\r\n      fontFamily: `'Suez One', serif`,\r\n      fontSize: '1.5rem',\r\n    },\r\n    subtitle1: {\r\n      fontFamily: `'Varela Round', sans-serif`\r\n    }\r\n  },\r\n  palette: {\r\n    primary: {\r\n        light: '#63ccff',\r\n        main: '#1d5fd8',\r\n        dark: '#006db3',\r\n        contrastText: '#fff',\r\n    },\r\n    text:{\r\n        primary : '#fff',\r\n        textSecondary : 'rgba(0, 0, 0, 0.85)'\r\n    }\r\n    },\r\n    breakpoints: {\r\n      values: {\r\n        xs: 375,\r\n        sm: 600,\r\n        md: 960,\r\n        lg: 1280,\r\n        xl: 1920,\r\n      }\r\n    }\r\n});\r\n\r\nexport default theme;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = { \r\n    initialCdItems:[],\r\n    initialRecordItems:[],\r\n    filteredRecordLs:[],\r\n    filteredCdLs:[]\r\n};\r\n\r\nconst itemsListReducer = (state= initialState, action) => {\r\n    switch(action.type){\r\n        // store all data from Json file via componentDidMount from App.js\r\n        // separte to two lists initialCdItems and initialRecordItems\r\n        case actionTypes.STORE_INITIAL_DATA:\r\n            if(action.payload.itemType === 'records'){ \r\n                return ({\r\n                    ...state,\r\n                    initialRecordItems: [action.payload.item, ...state.initialRecordItems]\r\n                })\r\n            }else{ \r\n                return ({\r\n                    ...state,\r\n                    initialCdItems: [action.payload.item, ...state.initialCdItems]\r\n                })\r\n            }\r\n        // filtering action- filtering to names in the initial list that been passed from \r\n        // the action file \r\n        case actionTypes.FILTER_RECORDS_LIST:\r\n            const itemsToFilter = state.initialRecordItems.filter(item => {\r\n                return (item.artist_name.includes(action.searchKey) || item.name.includes(action.searchKey))\r\n            })\r\n            itemsToFilter.length <=0 ? alert('no items as been found'): alert(`${itemsToFilter.length} items found`)\r\n\r\n            return {\r\n                ...state,\r\n                filteredRecordLs: itemsToFilter\r\n            }\r\n            case actionTypes.FILTER_CDS_LIST:\r\n                    const searchedCd = action.search.toLowerCase();\r\n                    const itemsToFilterCd = state.initialCdItems.filter(item => {\r\n                        return (item.artist_name.includes(searchedCd) || item.name.includes(searchedCd))\r\n                    })\r\n                    itemsToFilterCd.length <=0 ? alert('no items as been found'): alert(`${itemsToFilterCd.length} items found`)\r\n        \r\n                    return {\r\n                        ...state,\r\n                        filteredCdLs: itemsToFilterCd\r\n                    }\r\n        // reset filtering   \r\n        case actionTypes.FILTER_RESET:\r\n            return {\r\n                ...state,\r\n                filteredRecordLs: action.listType === 'Vinyl Records' ? [] : state.filteredRecordLs,\r\n                filteredCdLs: action.listType === 'Cd' ? [] : state.filteredCdLs\r\n            }\r\n\r\n        // remove items \r\n        case actionTypes.REMOVE:\r\n                let updateList = []\r\n                const recordFilterdCase = state.initialRecordItems.indexOf(state.filteredRecordLs[action.payload.index])\r\n                const cdFilterdCase = state.initialCdItems.indexOf(state.filteredCdLs[action.payload.index])\r\n                if(action.payload.lsType === 'Vinyl Records'){\r\n                    if(recordFilterdCase >= 0){\r\n                        updateList = state.initialRecordItems.filter((item, i) => i !== recordFilterdCase)\r\n                    }else{\r\n                        updateList = state.initialRecordItems.filter((item, i) => i !== action.payload.index)  \r\n                    }\r\n                }else if(action.payload.lsType === 'Cds'){\r\n                    if(cdFilterdCase >= 0){\r\n                        updateList = state.initialCdItems.filter((item, i) => i !== cdFilterdCase)\r\n                    }else{\r\n                        updateList = state.initialCdItems.filter((item, i) => i !== action.payload.index)  \r\n                    }\r\n                }\r\n            return {\r\n                ...state,\r\n                initialRecordItems: action.payload.lsType === 'Vinyl Records' ?\r\n                    updateList : state.initialRecordItems,\r\n                initialCdItems: action.payload.lsType === 'Cds' ?\r\n                    updateList : state.initialCdItems,\r\n                filteredRecordLs:action.payload.lsType === 'Vinyl Records' ?\r\n                    state.filteredRecordLs.filter((item, i) => i !== action.payload.index) : state.filteredRecordLs,\r\n                filteredCdLs:action.payload.lsType === 'Cds' ?\r\n                    state.filteredCdLs.filter((item, i) => i !== action.payload.index) : state.filteredCdLs\r\n            } \r\n\r\n        // duplicate items\r\n        case actionTypes.DUPLICATE:\r\n                let updateFilter = '' \r\n                if(state.filteredRecordLs.length > 0 && action.payload.lsType === 'Vinyl Records'){\r\n                     updateFilter= 'RecordsLs'\r\n                }else if(state.filteredCdLs.length > 0 && action.payload.lsType === 'Cds'){\r\n                     updateFilter= 'CdLs'\r\n                }\r\n         \r\n                return {\r\n                    ...state,\r\n                    initialRecordItems: action.payload.lsType === 'Vinyl Records' ?\r\n                        [...state.initialRecordItems, state.initialRecordItems[action.payload.index]] : state.initialRecordItems,\r\n                    initialCdItems: action.payload.lsType === 'Cds' ?\r\n                        [...state.initialCdItems, state.initialCdItems[action.payload.index]] : state.initialCdItems,\r\n                    filteredRecordLs: updateFilter === 'RecordsLs' ?\r\n                        [...state.filteredRecordLs, state.filteredRecordLs[action.payload.index]] : state.filteredRecordLs,\r\n                    filteredCdLs: updateFilter === 'CdLs' ?\r\n                        [...state.filteredCdLs, state.filteredCdLs[action.payload.index]] : state.filteredCdLs\r\n\r\n                } \r\n        default: \r\n            return state;\r\n    };\r\n    \r\n};\r\n\r\nexport default itemsListReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// THEME\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport muiTheme from './theme/muiTheme';\n\nimport itemsHandlerReducer from './store/reducers/itemsHandlerReducer';\n\n\nconst logger = store => {\n    return next => {\n        return action => {\n            const result = next(action);\n            return result;\n        }\n    }\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(itemsHandlerReducer, composeEnhancers(applyMiddleware(logger , thunk)));\n\nReactDOM.render(<Provider store={store}><MuiThemeProvider theme={muiTheme}><App /></MuiThemeProvider></Provider>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}